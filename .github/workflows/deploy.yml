name: Build and Deploy Dashboard Backend to OpenShift

on:
  push:
    branches:
      - main  # Change this to the branch you deploy from

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GH_TOKEN }}

    - name: Install OpenShift CLI
      run: |
        curl -L https://mirror.openshift.com/pub/openshift-v4/clients/oc/latest/linux/oc.tar.gz -o oc.tar.gz
        tar -xzf oc.tar.gz
        sudo mv oc /usr/local/bin/

    - name: Login to OpenShift
      run: |
        oc login --token=sha256~WopsTVU38g_-xUp5rmEBUaGm-aT8HbJOFVz3VhFcUWE --server=https://api.rm3.7wse.p1.openshiftapps.com:6443 --insecure-skip-tls-verify

    - name: Create New OpenShift Build (if needed)
      run: |
        oc project t4nm4y-dev
        if ! oc get bc dashboard-backend; then
          oc new-build --name=dashboard-backend --strategy=docker --binary
        fi

    - name: Start OpenShift Build
      run: |
        oc start-build dashboard-backend --from-dir=. --follow

    - name: Deploy Application
      run: |
        if ! oc get deployment dashboard-backend; then
          oc new-app dashboard-backend
        else
          oc set image deployment/dashboard-backend dashboard-backend=image-registry.openshift-image-registry.svc:5000/t4nm4y-dev/dashboard-backend:latest
          oc rollout restart deployment/dashboard-backend
        fi

    - name: Expose OpenShift Service
      run: |
        if ! oc get svc dashboard-backend; then
          oc expose deployment dashboard-backend --port=8000 --name=dashboard-backend
        fi

    - name: Create OpenShift Route
      run: |
        if ! oc get route dashboard-backend; then
          oc expose svc/dashboard-backend
        fi

    - name: Secure Route with HTTPS
      run: |
        oc patch route dashboard-backend -p '{"spec":{"tls":{"termination":"edge"}}}' || echo "TLS already configured"

    - name: Display Deployed Route
      run: |
        echo "Dashboard backend is accessible at: https://$(oc get route dashboard-backend -o jsonpath='{.spec.host}')"
